import React, { useState, useRef, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Navbar } from "@/components/Navbar";
import {
  MessageCircle,
  Send,
  Bot,
  User,
  Sparkles,
  HelpCircle,
  CreditCard,
  Home,
  Calculator,
  BookOpen,
  Clock,
  CheckCircle2,
} from "lucide-react";
import { cn } from "@/lib/utils";

interface Message {
  id: string;
  sender: "user" | "bot";
  message: string;
  timestamp: Date;
  isTyping?: boolean;
  quickReplies?: string[];
}

const Chat = () => {
  const [messages, setMessages] = useState<Message[]>([
    {
      id: "1",
      sender: "bot",
      message:
        "р╕кр╕зр╕▒р╕кр╕Фр╕╡р╕Др╕гр╕▒р╕Ъ! р╕Ьр╕бр╣Ар╕Ыр╣Зр╕Щр╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в GHB CreditBuilder р╕вр╕┤р╕Щр╕Фр╕╡р╣Гр╕лр╣Йр╕Др╕│р╕Ыр╕гр╕╢р╕Бр╕йр╕▓р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Бр╕ер╕░р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Др╕гр╕▒р╕Ъ ЁЯШК",
      timestamp: new Date(),
      quickReplies: [
        "р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕Др╕╖р╕нр╕нр╕░р╣Др╕г?",
        "р╕Вр╕нр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щр╕вр╕▒р╕Зр╣Др╕З?",
        "р╕зр╕┤р╕Шр╕╡р╣Ар╕Юр╕┤р╣Ир╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Х",
        "р╕Фр╕╣р╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щ",
      ],
    },
  ]);
  const [inputMessage, setInputMessage] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const scrollAreaRef = useRef<HTMLDivElement>(null);

  const quickQuestions = [
    {
      icon: CreditCard,
      title: "р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Бр╕ер╕░р╕Др╕░р╣Бр╕Щр╕Щ",
      questions: [
        "р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕Др╕╖р╕нр╕нр╕░р╣Др╕г?",
        "р╕зр╕┤р╕Шр╕╡р╣Ар╕Юр╕┤р╣Ир╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Х",
        "р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕вр╕▒р╕Зр╣Др╕З?",
        "р╕Чр╕│р╣Др╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕кр╕│р╕Др╕▒р╕Н?",
        "р╕Ыр╕▒р╕Ир╕Ир╕▒р╕вр╕Чр╕╡р╣Ир╕кр╣Ир╕Зр╕Ьр╕ер╕Хр╣Ир╕нр╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Х",
        "р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Ар╕кр╕╡р╕вр╣Бр╕Бр╣Йр╣Др╕Вр╣Др╕Фр╣Йр╣Др╕лр╕б?",
      ],
    },
    {
      icon: Home,
      title: "р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щ",
      questions: [
        "р╣Ар╕Зр╕╖р╣Ир╕нр╕Щр╣Др╕Вр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щ",
        "р╣Ар╕Хр╕гр╕╡р╕вр╕бр╣Ар╕нр╕Бр╕кр╕▓р╕гр╕нр╕░р╣Др╕гр╕Ър╣Йр╕▓р╕З?",
        "р╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щр╕Бр╕▓р╕гр╕Вр╕нр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕н",
        "р╕Фр╕▓р╕зр╕Щр╣Мр╣Ар╕Ър╕нр╕гр╣Мр╣Ар╕Лр╣Зр╕Щр╕Хр╣Мр╕Вр╕▒р╣Йр╕Щр╕Хр╣Ир╕│",
        "р╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╕ер╣Ир╕▓р╕кр╕╕р╕Ф",
        "р╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Ьр╣Ир╕нр╕Щр╕Кр╕│р╕гр╕░",
        "р╕Др╣Ир╕▓р╕Шр╕гр╕гр╕бр╣Ар╕Щр╕╡р╕вр╕бр╕Хр╣Ир╕▓р╕Зр╣Ж",
        "р╕Бр╕▓р╕гр╕Ыр╕гр╕░р╕Бр╕▒р╕Щр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕н",
      ],
    },
    {
      icon: Calculator,
      title: "р╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕У",
      questions: [
        "р╕Др╕│р╕Щр╕зр╕Ур╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╕вр╕▒р╕Зр╣Др╕З?",
        "р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕Ьр╣Ир╕нр╕Щр╕Кр╕│р╕гр╕░",
        "р╕Ыр╕гр╕░р╣Ар╕бр╕┤р╕Щр╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Кр╕│р╕гр╕░",
        "р╕Др╕│р╕Щр╕зр╕Ур╕гр╕▓р╕вр╣Др╕Фр╣Йр╕Хр╣Ир╕нр╣Ар╕Фр╕╖р╕нр╕Щ",
        "р╕лр╕Щр╕╡р╣Йр╕кр╕┤р╕Щр╕Хр╣Ир╕нр╕гр╕▓р╕вр╣Др╕Фр╣Й",
        "р╣Ар╕Зр╕┤р╕Щр╕Фр╕▓р╕зр╕Щр╣Мр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╣Ар╕Хр╕гр╕╡р╕вр╕б",
        "р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б",
      ],
    },
    {
      icon: BookOpen,
      title: "р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й",
      questions: [
        "р╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕бр╕╖р╕нр╣Гр╕лр╕бр╣И",
        "р╣Ар╕Чр╕Др╕Щр╕┤р╕Др╕Бр╕▓р╕гр╕нр╕нр╕бр╣Ар╕Зр╕┤р╕Щ",
        "р╕Бр╕▓р╕гр╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ",
        "р╕лр╕ер╕▒р╕Бр╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕╕р╕Щр╣Ар╕Ър╕╖р╣Йр╕нр╕Зр╕Хр╣Йр╕Щ",
        "р╕Бр╕▓р╕гр╕Ър╕гр╕┤р╕лр╕▓р╕гр╕лр╕Щр╕╡р╣Й",
        "р╕Ыр╕гр╕░р╕Бр╕▒р╕Щр╕Кр╕╡р╕зр╕┤р╕Хр╣Бр╕ер╕░р╕кр╕╕р╕Вр╕ар╕▓р╕Ю",
        "р╣Ар╕Др╕ер╣Зр╕Фр╕ер╕▒р╕Ър╕Бр╕▓р╕гр╣Ар╕Бр╣Зр╕Ър╣Ар╕Зр╕┤р╕Щ",
      ],
    },
    {
      icon: Clock,
      title: "р╕Др╕Щр╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░",
      questions: [
        "р╕Яр╕гр╕╡р╣Бр╕ер╕Щр╕Лр╣Мр╕Вр╕нр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╣Др╕Фр╣Йр╣Др╕лр╕б?",
        "р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕Щр╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░",
        "р╕Юр╕┤р╕кр╕╣р╕Ир╕Щр╣Мр╕гр╕▓р╕вр╣Др╕Фр╣Йр╕вр╕▒р╕Зр╣Др╕З?",
        "р╕Чр╕│р╕Ър╕▒р╕Нр╕Кр╕╡р╕гр╕▓р╕вр╕гр╕▒р╕Ъ-р╕Ир╣Ир╕▓р╕в",
        "р╕кр╕гр╣Йр╕▓р╕Зр╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ",
        "р╕Вр╣Йр╕нр╕Фр╕╡р╕Вр╕нр╕Зр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░",
        "р╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╣Ар╕Зр╕┤р╕Щр╣Ар╕Бр╕йр╕╡р╕вр╕У",
      ],
    },
    {
      icon: CheckCircle2,
      title: "р╣Ар╕Чр╕Др╕Щр╕┤р╕Др╣Ар╕Йр╕Юр╕▓р╕░",
      questions: [
        "р╣Ар╕Юр╕┤р╣Ир╕бр╣Вр╕нр╕Бр╕▓р╕кр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕н",
        "р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕▓р╕Зр╣Ар╕ер╕╖р╕нр╕Бр╕Др╕╖р╕нр╕нр╕░р╣Др╕г?",
        "р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕нр╕╡р╕Др╕нр╕бр╣Ар╕бр╕┤р╕гр╣Мр╕Л",
        "р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╕Др╣Ир╕▓р╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕╣р╕Ыр╣Вр╕ар╕Д",
        "р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Бр╕гр╕Б",
        "р╣Ар╕Чр╕Др╕Щр╕┤р╕Др╕Бр╕▓р╕гр╕Ьр╣Ир╕нр╕Щр╕Кр╕│р╕гр╕░",
        "р╕лр╕ер╕╡р╕Бр╣Ар╕ер╕╡р╣Ир╕вр╕Зр╕лр╕Щр╕╡р╣Йр╣Ар╕кр╕╡р╕в",
        "р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╕Рр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ",
      ],
    },
  ];

  useEffect(() => {
    if (scrollAreaRef.current) {
      scrollAreaRef.current.scrollTop = scrollAreaRef.current.scrollHeight;
    }
  }, [messages]);

  const sendMessage = async (messageText: string) => {
    if (!messageText.trim()) return;

    // Add user message
    const userMessage: Message = {
      id: Date.now().toString(),
      sender: "user",
      message: messageText,
      timestamp: new Date(),
    };

    setMessages((prev) => [...prev, userMessage]);
    setInputMessage("");
    setIsTyping(true);

    // Simulate bot response delay
    setTimeout(() => {
      const botResponse = getBotResponse(messageText);
      setMessages((prev) => [...prev, botResponse]);
      setIsTyping(false);
    }, 1500);
  };

  const getBotResponse = (userMessage: string): Message => {
    const lowerMessage = userMessage.toLowerCase();

    let response = "";
    let quickReplies: string[] = [];

    if (lowerMessage.includes("р╣Ар╕Др╕гр╕Фр╕┤р╕Х") || lowerMessage.includes("р╕Др╕░р╣Бр╕Щр╕Щ")) {
      response = `р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕Др╕╖р╕нр╕Бр╕▓р╕гр╕Ыр╕гр╕░р╣Ар╕бр╕┤р╕Щр╕Др╕зр╕▓р╕бр╕Щр╣Ир╕▓р╣Ар╕Кр╕╖р╣Ир╕нр╕Цр╕╖р╕нр╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕Др╕гр╕▒р╕Ъ ЁЯУК

ЁЯОп **р╕Ыр╕▒р╕Ир╕Ир╕▒р╕вр╕кр╕│р╕Др╕▒р╕Нр╕Чр╕╡р╣Ир╕кр╣Ир╕Зр╕Ьр╕ер╕Хр╣Ир╕нр╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Х:**
ЁЯУМ р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╕лр╕Щр╕╡р╣Й (35%)
ЁЯУМ р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╣Ар╕Др╕гр╕Фр╕┤р╕Х (30%) 
ЁЯУМ р╕нр╕▓р╕вр╕╕р╕Вр╕нр╕Зр╕Ър╕▒р╕Нр╕Кр╕╡ (15%)
ЁЯУМ р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╣Ар╕Др╕гр╕Фр╕┤р╕Х (10%)
ЁЯУМ р╕Бр╕▓р╕гр╕кр╕нр╕Ър╕Цр╕▓р╕бр╣Ар╕Др╕гр╕Фр╕┤р╕Х (10%)

ЁЯТб **р╣Ар╕Чр╕Др╕Щр╕┤р╕Др╣Ар╕Юр╕┤р╣Ир╕бр╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Х:**
тАв р╕Кр╕│р╕гр╕░р╕лр╕Щр╕╡р╣Йр╕Хр╕гр╕Зр╣Ар╕зр╕ер╕▓р╕Чр╕╕р╕Бр╕Др╕гр╕▒р╣Йр╕З
тАв р╣Гр╕Кр╣Йр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щ 30% р╕Вр╕нр╕Зр╕зр╕Зр╣Ар╕Зр╕┤р╕Щ
тАв р╣Ар╕Бр╣Зр╕Ър╕Ър╕▒р╕Нр╕Кр╕╡р╣Ар╕Бр╣Ир╕▓р╣Др╕зр╣Й
тАв р╕лр╕ер╕╡р╕Бр╣Ар╕ер╕╡р╣Ир╕вр╕Зр╕Бр╕▓р╕гр╕Вр╕нр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕Ър╣Ир╕нр╕вр╣Ар╕Бр╕┤р╕Щр╣Др╕Ы`;
      quickReplies = [
        "р╕зр╕┤р╕Шр╕╡р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕░р╣Бр╕Щр╕Щ",
        "р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Ар╕кр╕╡р╕вр╣Бр╕Бр╣Йр╣Др╕Вр╣Др╕Фр╣Йр╣Др╕лр╕б",
        "р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╕Др╕░р╣Бр╕Щр╕Щ",
      ];
    } else if (
      lowerMessage.includes("р╕Яр╕гр╕╡р╣Бр╕ер╕Щр╕Лр╣М") ||
      lowerMessage.includes("р╕нр╕┤р╕кр╕гр╕░") ||
      lowerMessage.includes("р╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░")
    ) {
      response = `р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕Щр╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░ р╣Ар╕гр╕▓р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Фр╕╡р╕зр╣Ир╕▓р╕Бр╕▓р╕гр╕Вр╕нр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕вр╕▓р╕Бр╕Бр╕зр╣Ир╕▓р╕Юр╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕Ыр╕гр╕░р╕Ир╕│ ЁЯТк

ЁЯФе **р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕▓р╕Зр╣Ар╕ер╕╖р╕нр╕Бр╕Чр╕╡р╣И GHB р╣Гр╕Кр╣Йр╕Ыр╕гр╕░р╣Ар╕бр╕┤р╕Щ:**
ЁЯУ▒ р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Вр╕▓р╕вр╕нр╕нр╕Щр╣Др╕ер╕Щр╣М (Shopee, Lazada)
ЁЯТб р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╕Др╣Ир╕▓р╣Др╕Я-р╕Щр╣Йр╕│р╕Хр╕гр╕Зр╣Ар╕зр╕ер╕▓
ЁЯТ░ р╕вр╕нр╕Фр╣Ар╕Зр╕┤р╕Щр╕Эр╕▓р╕Бр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕нр╕нр╕бр╣Ар╕Зр╕┤р╕Щ
ЁЯУж р╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Вр╕нр╕Зр╕Ьр╣Ир╕▓р╕Щ Kerry, Flash Express
ЁЯЪЧ р╕Бр╕▓р╕гр╣Гр╕Кр╣Й Grab, Foodpanda

ЁЯУЭ **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕Чр╕╡р╣Ир╕Кр╣Ир╕зр╕вр╣Др╕Фр╣Й:**
тАв р╕кр╕│р╣Ар╕Щр╕▓р╕Ър╕▒р╕Нр╕Кр╕╡р╕Шр╕Щр╕▓р╕Др╕▓р╕г 6 р╣Ар╕Фр╕╖р╕нр╕Щ
тАв р╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Бр╕▓р╕гр╕Вр╕▓р╕вр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕нр╕нр╕Щр╣Др╕ер╕Щр╣М
тАв р╣Гр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕Др╣Ир╕▓р╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕╣р╕Ыр╣Вр╕ар╕Д
тАв р╕кр╕▒р╕Нр╕Нр╕▓р╣Ар╕Кр╣Ир╕▓р╕лр╕гр╕╖р╕нр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Ър╣Йр╕▓р╕Щ`;
      quickReplies = [
        "р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕нр╕╡р╕Др╕нр╕бр╣Ар╕бр╕┤р╕гр╣Мр╕Л",
        "р╕Юр╕┤р╕кр╕╣р╕Ир╕Щр╣Мр╕гр╕▓р╕вр╣Др╕Фр╣Й",
        "р╕кр╕гр╣Йр╕▓р╕Зр╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ",
      ];
    } else if (
      lowerMessage.includes("р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕н") ||
      lowerMessage.includes("р╕Ър╣Йр╕▓р╕Щ") ||
      lowerMessage.includes("р╕Бр╣Ир╕нр╕кр╕гр╣Йр╕▓р╕З")
    ) {
      response = `ЁЯПа **р╕Др╕╣р╣Ир╕бр╕╖р╕нр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щр╕Йр╕Ър╕▒р╕Ър╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М**

ЁЯТ░ **р╣Ар╕Зр╕╖р╣Ир╕нр╕Щр╣Др╕Вр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ:**
тАв р╣Ар╕Зр╕┤р╕Щр╕Фр╕▓р╕зр╕Щр╣Мр╕Вр╕▒р╣Йр╕Щр╕Хр╣Ир╕│ 10-20%
тАв р╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕в 3.99-7.50% р╕Хр╣Ир╕нр╕Ыр╕╡
тАв р╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Ьр╣Ир╕нр╕Щ р╕кр╕╣р╕Зр╕кр╕╕р╕Ф 30 р╕Ыр╕╡
тАв р╕гр╕▓р╕вр╣Др╕Фр╣Йр╕Вр╕▒р╣Йр╕Щр╕Хр╣Ир╕│ 15,000 р╕Ър╕▓р╕Ч/р╣Ар╕Фр╕╖р╕нр╕Щ

ЁЯУЛ **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕кр╕│р╕Др╕▒р╕Н:**
тАв р╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щ + р╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Ър╣Йр╕▓р╕Щ
тАв р╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕гр╕▓р╕вр╣Др╕Фр╣Й 6 р╣Ар╕Фр╕╖р╕нр╕Щ
тАв р╕кр╕│р╣Ар╕Щр╕▓р╣Вр╕Йр╕Щр╕Фр╕Чр╕╡р╣Ир╕Фр╕┤р╕Щ
тАв р╣Гр╕Ър╕нр╕Щр╕╕р╕Нр╕▓р╕Хр╕Бр╣Ир╕нр╕кр╕гр╣Йр╕▓р╕З (р╕Бр╕гр╕Ур╕╡р╕Лр╕╖р╣Йр╕нр╕Ър╣Йр╕▓р╕Щр╣Гр╕лр╕бр╣И)

ЁЯОп **р╣Ар╕Др╕ер╣Зр╕Фр╕ер╕▒р╕Ър╕Ьр╣Ир╕▓р╕Щр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤:**
тАв р╕лр╕Щр╕╡р╣Йр╕кр╕┤р╕Щр╕гр╕зр╕бр╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щ 70% р╕Вр╕нр╕Зр╕гр╕▓р╕вр╣Др╕Фр╣Й
тАв р╕бр╕╡р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕Чр╕╡р╣Ир╕Фр╕╡
тАв р╕бр╕╡р╣Ар╕Зр╕┤р╕Щр╕кр╕│р╕гр╕нр╕Зр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 6 р╣Ар╕Фр╕╖р╕нр╕Щ`;
      quickReplies = [
        "р╕Ир╕│р╕ер╕нр╕Зр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕н",
        "р╕Др╕│р╕Щр╕зр╕Ур╣Ар╕Зр╕┤р╕Щр╕Фр╕▓р╕зр╕Щр╣М",
        "р╕Др╣Ир╕▓р╕Шр╕гр╕гр╕бр╣Ар╕Щр╕╡р╕вр╕б",
        "р╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щр╕кр╕бр╕▒р╕Др╕г",
      ];
    } else if (
      lowerMessage.includes("р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕в") ||
      lowerMessage.includes("р╕Др╕│р╕Щр╕зр╕У") ||
      lowerMessage.includes("р╕Ьр╣Ир╕нр╕Щ")
    ) {
      response = `ЁЯзо **р╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕Ур╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щ**

ЁЯУК **р╕кр╕╣р╕Хр╕гр╕Др╕│р╕Щр╕зр╕Ур╕Зр╕зр╕Фр╕Ьр╣Ир╕нр╕Щ:**
р╕Зр╕зр╕Фр╕Ьр╣Ир╕нр╕Щ = р╣Ар╕Зр╕┤р╕Щр╕Бр╕╣р╣Й ├Ч [r(1+r)^n] / [(1+r)^n-1]

ЁЯТб **р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕У:**
р╣Ар╕Зр╕┤р╕Щр╕Бр╕╣р╣Й: 2,000,000 р╕Ър╕▓р╕Ч
р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕в: 5% р╕Хр╣Ир╕нр╕Ыр╕╡ (0.42% р╕Хр╣Ир╕нр╣Ар╕Фр╕╖р╕нр╕Щ)
р╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓: 20 р╕Ыр╕╡ (240 р╕Зр╕зр╕Ф)
**р╕Ьр╣Ир╕нр╕Щр╕Хр╣Ир╕нр╣Ар╕Фр╕╖р╕нр╕Щ: 13,191 р╕Ър╕▓р╕Ч**

ЁЯУИ **р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б:**
тАв р╕Др╣Ир╕▓р╕Шр╕гр╕гр╕бр╣Ар╕Щр╕╡р╕вр╕бр╕Ир╕▒р╕Фр╕Чр╕│р╕кр╕▒р╕Нр╕Нр╕▓ 3,000-5,000 р╕Ър╕▓р╕Ч
тАв р╕Др╣Ир╕▓р╕Ыр╕гр╕░р╣Ар╕бр╕┤р╕Щр╕лр╕ер╕▒р╕Бр╕Чр╕гр╕▒р╕Юр╕вр╣М 2,000-3,000 р╕Ър╕▓р╕Ч
тАв р╕Ыр╕гр╕░р╕Бр╕▒р╕Щр╕Кр╕╡р╕зр╕┤р╕Х 0.5-1% р╕Вр╕нр╕Зр╣Ар╕Зр╕┤р╕Щр╕Бр╕╣р╣Йр╕Хр╣Ир╕нр╕Ыр╕╡
тАв р╕Ыр╕гр╕░р╕Бр╕▒р╕Щр╕нр╕▒р╕Др╕Др╕╡р╕ар╕▒р╕в 0.1-0.2% р╕Хр╣Ир╕нр╕Ыр╕╡`;
      quickReplies = ["р╣Гр╕Кр╣Йр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Др╕│р╕Щр╕зр╕У", "р╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ър╣Бр╕Ър╕Зр╕Бр╣М", "р╕Ыр╕гр╕░р╕Бр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ"];
    } else if (
      lowerMessage.includes("р╕нр╕нр╕б") ||
      lowerMessage.includes("р╣Ар╕Зр╕┤р╕Щ") ||
      lowerMessage.includes("р╕ер╕Зр╕Чр╕╕р╕Щ")
    ) {
      response = `ЁЯТ░ **р╕Др╕╣р╣Ир╕бр╕╖р╕нр╕Бр╕▓р╕гр╕нр╕нр╕бр╣Бр╕ер╕░р╕ер╕Зр╕Чр╕╕р╕Щр╕Йр╕Ър╕▒р╕Ър╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ**

ЁЯУЛ **р╕Бр╕ер╕вр╕╕р╕Чр╕Шр╣Мр╕Бр╕▓р╕гр╕нр╕нр╕бр╣Ар╕Зр╕┤р╕Щ:**
ЁЯОп р╕Бр╕О 50/30/20
тАв 50% р╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ
тАв 30% р╕Др╕зр╕▓р╕бр╕Ър╕▒р╕Щр╣Ар╕Чр╕┤р╕Зр╣Бр╕ер╕░р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г  
тАв 20% р╕Бр╕▓р╕гр╕нр╕нр╕бр╣Бр╕ер╕░р╕ер╕Зр╕Чр╕╕р╕Щ

ЁЯТб **р╣Ар╕Чр╕Др╕Щр╕┤р╕Др╣Ар╕Бр╣Зр╕Ър╣Ар╕Зр╕┤р╕Щр╣Др╕Фр╣Йр╕Ьр╕е:**
тАв р╕нр╕нр╕бр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤р╕Чр╕▒р╕Щр╕Чр╕╡р╣Др╕Фр╣Йр╣Ар╕Зр╕┤р╕Щр╣Ар╕Фр╕╖р╕нр╕Щ
тАв р╣Гр╕Кр╣Йр╕Бр╕гр╕░р╕Ыр╕╕р╕Бр╕нр╕нр╕Щр╣Др╕ер╕Щр╣М
тАв р╕Хр╕▒р╣Йр╕Зр╣Ар╕Ыр╣Йр╕▓р╕лр╕бр╕▓р╕вр╕гр╕░р╕вр╕░р╕кр╕▒р╣Йр╕Щ-р╕вр╕▓р╕з
тАв р╕ер╕Фр╕Др╣Ир╕▓р╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ

ЁЯУИ **р╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕╕р╕Щр╣Ар╕Ър╕╖р╣Йр╕нр╕Зр╕Хр╣Йр╕Щ:**
тАв р╣Ар╕Зр╕┤р╕Щр╕Эр╕▓р╕Бр╕Ыр╕гр╕░р╕Ир╕│ (1-2% р╕Хр╣Ир╕нр╕Ыр╕╡)
тАв р╕Бр╕нр╕Зр╕Чр╕╕р╕Щр╕гр╕зр╕б (3-8% р╕Хр╣Ир╕нр╕Ыр╕╡)
тАв р╕лр╕╕р╣Йр╕Щ (5-15% р╕Хр╣Ир╕нр╕Ыр╕╡ р╣Бр╕Хр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╣Ар╕кр╕╡р╣Ир╕вр╕З)
тАв р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М (р╕Бр╕▓р╕гр╣Ар╕Хр╕┤р╕Ър╣Вр╕Хр╕гр╕░р╕вр╕░р╕вр╕▓р╕з)`;
      quickReplies = [
        "р╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╕нр╕нр╕бр╣Ар╕Зр╕┤р╕Щ",
        "р╣Ар╕гр╕┤р╣Ир╕бр╕ер╕Зр╕Чр╕╕р╕Щ",
        "р╕Бр╕нр╕Зр╕Чр╕╕р╕Щр╣Ар╕Бр╕йр╕╡р╕вр╕У",
        "р╕Ыр╕гр╕░р╕Бр╕▒р╕Щр╕Кр╕╡р╕зр╕┤р╕Х",
      ];
    } else if (
      lowerMessage.includes("р╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щ") ||
      lowerMessage.includes("р╣Ар╕гр╕╡р╕вр╕Щ") ||
      lowerMessage.includes("р╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓")
    ) {
      response = `ЁЯУЪ **р╕ир╕╣р╕Щр╕вр╣Мр╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й GHB CreditBuilder**

ЁЯОУ **р╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕гр╣Бр╕Щр╕░р╕Щр╕│:**

ЁЯУЦ **р╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ (р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ)**
тАв р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╣Ар╕Зр╕┤р╕Щр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕нр╕нр╕б
тАв р╕Бр╕▓р╕гр╕Чр╕│р╕Ър╕▒р╕Нр╕Кр╕╡р╕гр╕▓р╕вр╕гр╕▒р╕Ъ-р╕Ир╣Ир╕▓р╕в
тАв р╕лр╕ер╕▒р╕Бр╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕╕р╕Щр╣Ар╕Ър╕╖р╣Йр╕нр╕Зр╕Хр╣Йр╕Щ
тП▒я╕П р╣Ар╕зр╕ер╕▓: 15 р╕Щр╕▓р╕Чр╕╡ | ЁЯОБ р╕гр╕▓р╕Зр╕зр╕▒р╕е: 50 р╕Др╕░р╣Бр╕Щр╕Щ

ЁЯПа **р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щ (р╕гр╕░р╕Фр╕▒р╕Ър╕Бр╕ер╕▓р╕З)**
тАв р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕бр╕╡
тАв р╕Бр╕▓р╕гр╣Ар╕Хр╕гр╕╡р╕вр╕бр╣Ар╕нр╕Бр╕кр╕▓р╕г
тАв р╣Ар╕Чр╕Др╕Щр╕┤р╕Др╕Ьр╣Ир╕▓р╕Щр╕нр╕Щр╕╕р╕бр╕▒р╕Хр╕┤
тП▒я╕П р╣Ар╕зр╕ер╕▓: 25 р╕Щр╕▓р╕Чр╕╡ | ЁЯОБ р╕гр╕▓р╕Зр╕зр╕▒р╕е: 100 р╕Др╕░р╣Бр╕Щр╕Щ

ЁЯТО **р╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕╕р╕Щр╕Вр╕▒р╣Йр╕Щр╕кр╕╣р╕З**
тАв р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕лр╕╕р╣Йр╕Щр╣Бр╕ер╕░р╕Бр╕нр╕Зр╕Чр╕╕р╕Щ
тАв р╕Бр╕▓р╕гр╕Бр╕гр╕░р╕Ир╕▓р╕вр╕Др╕зр╕▓р╕бр╣Ар╕кр╕╡р╣Ир╕вр╕З
тАв р╕Бр╕▓р╕гр╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╣Ар╕Бр╕йр╕╡р╕вр╕У
тП▒я╕П р╣Ар╕зр╕ер╕▓: 30 р╕Щр╕▓р╕Чр╕╡ | ЁЯОБ р╕гр╕▓р╕Зр╕зр╕▒р╕е: 150 р╕Др╕░р╣Бр╕Щр╕Щ`;
      quickReplies = ["р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕гр╕╡р╕вр╕Щр╣Ар╕ер╕в", "р╕Фр╕╣р╕Др╕░р╣Бр╕Щр╕Щр╕Вр╕нр╕Зр╕Йр╕▒р╕Щ", "р╕лр╕ер╕▒р╕Бр╕кр╕╣р╕Хр╕гр╣Бр╕Щр╕░р╕Щр╕│"];
    } else if (
      lowerMessage.includes("р╣Ар╕нр╕Бр╕кр╕▓р╕г") ||
      lowerMessage.includes("р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Ф")
    ) {
      response = `ЁЯУЛ **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щ**

ЁЯСд **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕кр╣Ир╕зр╕Щр╕Ър╕╕р╕Др╕Др╕е:**
тАв р╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щ (р╕лр╕Щр╣Йр╕▓-р╕лр╕ер╕▒р╕З)
тАв р╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Ър╣Йр╕▓р╕Щ
тАв р╣Гр╕Ър╕кр╕│р╕Др╕▒р╕Нр╕Бр╕▓р╕гр╕кр╕бр╕гр╕к (р╕Цр╣Йр╕▓р╕бр╕╡)
тАв р╕кр╕│р╣Ар╕Щр╕▓р╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕кр╕бр╕гр╕к (р╕Цр╣Йр╕▓р╕бр╕╡)

ЁЯТ░ **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ:**
тАв р╕кр╕ер╕┤р╕Ыр╣Ар╕Зр╕┤р╕Щр╣Ар╕Фр╕╖р╕нр╕Щ 6 р╣Ар╕Фр╕╖р╕нр╕Щр╕ер╣Ир╕▓р╕кр╕╕р╕Ф
тАв р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕гр╕▒р╕Ър╕гр╕нр╕Зр╣Ар╕Зр╕┤р╕Щр╣Ар╕Фр╕╖р╕нр╕Щ
тАв р╕кр╕│р╣Ар╕Щр╕▓р╕Ър╕▒р╕Нр╕Кр╕╡р╕Шр╕Щр╕▓р╕Др╕▓р╕г 6 р╣Ар╕Фр╕╖р╕нр╕Щ
тАв р╣Гр╕Ър╣Бр╕кр╕Фр╕Зр╕гр╕▓р╕вр╣Др╕Фр╣Й (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Яр╕гр╕╡р╣Бр╕ер╕Щр╕Лр╣М)

ЁЯПа **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М:**
тАв р╕кр╕│р╣Ар╕Щр╕▓р╣Вр╕Йр╕Щр╕Фр╕Чр╕╡р╣Ир╕Фр╕┤р╕Щ
тАв р╣Гр╕Ър╕нр╕Щр╕╕р╕Нр╕▓р╕Хр╕Бр╣Ир╕нр╕кр╕гр╣Йр╕▓р╕З
тАв р╣Бр╕Ър╕Ър╣Бр╕Ыр╕ер╕Щр╕Ър╣Йр╕▓р╕Щ
тАв р╣Гр╕Ър╣Ар╕кр╕Щр╕нр╕гр╕▓р╕Др╕▓р╕Ир╕▓р╕Бр╕Ьр╕╣р╣Йр╕гр╕▒р╕Ър╣Ар╕лр╕бр╕▓

ЁЯУК **р╣Ар╕нр╕Бр╕кр╕▓р╕гр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕Щр╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░):**
тАв р╕кр╕▒р╕Нр╕Нр╕▓р╕Бр╕▓р╕гр╕Вр╕▓р╕вр╕нр╕нр╕Щр╣Др╕ер╕Щр╣М
тАв р╣Гр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕Др╣Ир╕▓р╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕╣р╕Ыр╣Вр╕ар╕Д
тАв р╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Бр╕▓р╕гр╣Вр╕нр╕Щр╣Ар╕Зр╕┤р╕Щ`;
      quickReplies = ["р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Ар╕нр╕Бр╕кр╕▓р╕г", "р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ", "р╣Ар╕нр╕Бр╕кр╕▓р╕гр╕Яр╕гр╕╡р╣Бр╕ер╕Щр╕Лр╣М"];
    } else {
      response = `р╕Вр╕нр╣Вр╕Чр╕йр╕Др╕гр╕▒р╕Ъ р╕Ьр╕бр╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Др╕│р╕Цр╕▓р╕бр╕Вр╕нр╕Зр╕Др╕╕р╕У ЁЯШЕ 

ЁЯдЦ **р╕Ьр╕бр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕нр╣Гр╕Щр╣Ар╕гр╕╖р╣Ир╕нр╕Зр╣Ар╕лр╕ер╣Ир╕▓р╕Щр╕╡р╣Й:**
ЁЯТ│ р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Бр╕ер╕░р╕Др╕░р╣Бр╕Щр╕Щр╣Ар╕Др╕гр╕Фр╕┤р╕Х
ЁЯПа р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щр╣Бр╕ер╕░р╕нр╕кр╕▒р╕Зр╕лр╕▓р╕гр╕┤р╕бр╕Чр╕гр╕▒р╕Юр╕вр╣М  
ЁЯТ░ р╕Бр╕▓р╕гр╕нр╕нр╕бр╣Ар╕Зр╕┤р╕Щр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕╕р╕Щ
ЁЯУЪ р╕Ър╕Чр╣Ар╕гр╕╡р╕вр╕Щр╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ
ЁЯСитАНЁЯТ╝ р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╕Щр╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕┤р╕кр╕гр╕░
ЁЯзо р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕бр╕╖р╕нр╕Др╕│р╕Щр╕зр╕Ур╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ

р╕ер╕нр╕Зр╣Ар╕ер╕╖р╕нр╕Бр╕лр╕▒р╕зр╕Вр╣Йр╕нр╕Чр╕╡р╣Ир╕кр╕Щр╣Гр╕И р╕лр╕гр╕╖р╕нр╕Цр╕▓р╕бр╕Др╕│р╕Цр╕▓р╕бр╣Гр╕лр╕бр╣Ир╣Др╕Фр╣Йр╣Ар╕ер╕вр╕Др╕гр╕▒р╕Ъ!`;
      quickReplies = [
        "р╣Ар╕Др╕гр╕Фр╕┤р╕Хр╕Др╕╖р╕нр╕нр╕░р╣Др╕г?",
        "р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╕Ър╣Йр╕▓р╕Щ",
        "р╕Яр╕гр╕╡р╣Бр╕ер╕Щр╕Лр╣Мр╕Вр╕нр╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕н",
        "р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ",
      ];
    }

    return {
      id: Date.now().toString(),
      sender: "bot",
      message: response,
      timestamp: new Date(),
      quickReplies,
    };
  };

  const handleQuickReply = (reply: string) => {
    sendMessage(reply);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      sendMessage(inputMessage);
    }
  };

  const MessageBubble = ({ message }: { message: Message }) => {
    const isBot = message.sender === "bot";

    return (
      <div className={cn("flex gap-3 mb-4", !isBot && "flex-row-reverse")}>
        <div
          className={cn(
            "w-10 h-10 rounded-full flex items-center justify-center flex-shrink-0",
            isBot ? "bg-ghb-primary" : "bg-ghb-accent",
          )}
        >
          {isBot ? (
            <Bot className="w-5 h-5 text-white" />
          ) : (
            <User className="w-5 h-5 text-white" />
          )}
        </div>

        <div className={cn("max-w-[80%] space-y-2", !isBot && "items-end")}>
          <div
            className={cn(
              "p-4 rounded-2xl",
              isBot ? "bg-white border shadow-sm" : "bg-ghb-primary text-white",
            )}
          >
            <p
              className={cn(
                "text-sm leading-relaxed thai-text whitespace-pre-line",
                isBot ? "text-ghb-dark" : "text-white",
              )}
            >
              {message.message}
            </p>
          </div>

          {message.quickReplies && message.quickReplies.length > 0 && (
            <div className="flex flex-wrap gap-2">
              {message.quickReplies.map((reply, index) => (
                <Button
                  key={index}
                  variant="outline"
                  size="sm"
                  onClick={() => handleQuickReply(reply)}
                  className="text-xs thai-text rounded-full"
                >
                  {reply}
                </Button>
              ))}
            </div>
          )}

          <div className={cn("text-xs text-ghb-gray", !isBot && "text-right")}>
            {message.timestamp.toLocaleTimeString("th-TH", {
              hour: "2-digit",
              minute: "2-digit",
            })}
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-ghb-light/30 via-white to-ghb-accent/5 flex flex-col">
      <Navbar />

      {/* Header */}
      <div className="pt-20 px-4 pb-4">
        <div className="text-center">
          <div className="w-16 h-16 bg-gradient-primary rounded-2xl flex items-center justify-center mx-auto mb-4">
            <MessageCircle className="w-8 h-8 text-white" />
          </div>
          <h1 className="text-2xl font-bold text-ghb-dark thai-text mb-2">
            р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в AI
          </h1>
          <p className="text-ghb-gray thai-text">
            р╕Ыр╕гр╕╢р╕Бр╕йр╕▓р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╣Ар╕Др╕гр╕Фр╕┤р╕Хр╣Бр╕ер╕░р╕кр╕┤р╕Щр╣Ар╕Кр╕╖р╣Ир╕нр╣Др╕Фр╣Йр╕Хр╕ер╕нр╕Ф 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З
          </p>
        </div>
      </div>

      {/* Chat Messages */}
      <div className="flex-1 px-4 pb-4">
        <Card className="h-full border-0 shadow-lg flex flex-col">
          <CardHeader className="border-b bg-gradient-to-r from-ghb-primary/5 to-ghb-accent/5">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-ghb-primary rounded-full flex items-center justify-center">
                  <Bot className="w-5 h-5 text-white" />
                </div>
                <div>
                  <CardTitle className="text-lg text-ghb-dark thai-text">
                    р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в GHB
                  </CardTitle>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                    <span className="text-xs text-ghb-gray thai-text">
                      р╕нр╕нр╕Щр╣Др╕ер╕Щр╣М
                    </span>
                  </div>
                </div>
              </div>
              <Badge className="bg-ghb-primary/10 text-ghb-primary border-0">
                <Sparkles className="w-3 h-3 mr-1" />
                AI
              </Badge>
            </div>
          </CardHeader>

          <CardContent className="flex-1 p-0 flex flex-col">
            <ScrollArea className="flex-1 p-4" ref={scrollAreaRef}>
              <div className="space-y-4">
                {messages.map((message) => (
                  <MessageBubble key={message.id} message={message} />
                ))}

                {isTyping && (
                  <div className="flex gap-3 mb-4">
                    <div className="w-10 h-10 rounded-full bg-ghb-primary flex items-center justify-center">
                      <Bot className="w-5 h-5 text-white" />
                    </div>
                    <div className="bg-white border rounded-2xl p-4 shadow-sm">
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-ghb-gray rounded-full animate-bounce"></div>
                        <div
                          className="w-2 h-2 bg-ghb-gray rounded-full animate-bounce"
                          style={{ animationDelay: "0.1s" }}
                        ></div>
                        <div
                          className="w-2 h-2 bg-ghb-gray rounded-full animate-bounce"
                          style={{ animationDelay: "0.2s" }}
                        ></div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </ScrollArea>

            {/* Quick Questions */}
            {messages.length === 1 && (
              <div className="p-4 border-t bg-ghb-light/20">
                <h3 className="text-sm font-semibold text-ghb-dark thai-text mb-3 flex items-center">
                  <HelpCircle className="w-4 h-4 mr-2" />
                  р╕Др╕│р╕Цр╕▓р╕бр╕вр╕нр╕Фр╕Щр╕┤р╕вр╕б
                </h3>
                <div className="grid grid-cols-2 gap-3">
                  {quickQuestions.map((category, index) => {
                    const Icon = category.icon;
                    return (
                      <div key={index} className="space-y-2">
                        <div className="flex items-center space-x-2">
                          <Icon className="w-4 h-4 text-ghb-primary" />
                          <span className="text-xs font-medium text-ghb-dark thai-text">
                            {category.title}
                          </span>
                        </div>
                        <div className="space-y-1">
                          {category.questions.map((question, qIndex) => (
                            <button
                              key={qIndex}
                              onClick={() => handleQuickReply(question)}
                              className="block w-full text-left text-xs text-ghb-gray hover:text-ghb-primary transition-colors p-2 rounded-lg hover:bg-ghb-primary/5 thai-text"
                            >
                              {question}
                            </button>
                          ))}
                        </div>
                      </div>
                    );
                  })}
                </div>
              </div>
            )}

            {/* Input Area */}
            <div className="p-4 border-t bg-white">
              <div className="flex items-center space-x-3">
                <div className="flex-1 relative">
                  <Input
                    value={inputMessage}
                    onChange={(e) => setInputMessage(e.target.value)}
                    onKeyPress={handleKeyPress}
                    placeholder="р╕Юр╕┤р╕бр╕Юр╣Мр╕Др╕│р╕Цр╕▓р╕бр╕Вр╕нр╕Зр╕Др╕╕р╕У..."
                    className="pr-12 h-12 thai-text"
                    disabled={isTyping}
                  />
                  <Button
                    onClick={() => sendMessage(inputMessage)}
                    disabled={!inputMessage.trim() || isTyping}
                    size="sm"
                    className="absolute right-2 top-2 h-8 w-8 p-0 bg-ghb-primary hover:bg-ghb-primary/90"
                  >
                    <Send className="w-4 h-4" />
                  </Button>
                </div>
              </div>
              <p className="text-xs text-ghb-gray text-center mt-2 thai-text">
                р╕Ьр╕╣р╣Йр╕Кр╣Ир╕зр╕в AI р╕нр╕▓р╕Ир╣Гр╕лр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Chat;
